@startuml

    object "leNet: SoftwareComponent" as leNet {

    }

    object "start: SoftwareComponent" as start {
    }

    object "0_Conv: Convolution" as 0_Conv {
        kernel_size = 5
        stride = 2
        padding = [0,0,0,0]
        num_output_channel = 20
    }

    object "1_Pool: MaxPooling" as 1_Pool {
        kernel_size = 2
        stride = 2
        padding = [0,0,0,0]
    }

    object "2_Conv: Convolution" as 2_Conv {
        kernel_size = 5
        stride = 1
        padding = [0,0,0,0]
        num_output_channel = 50
    }

    object "3_Pool: MaxPooling" as 3_Pool {
        kernel_size = 2
        stride = 2
        padding = [0,0,0,0]
    }

    object "4_FC: FullyConnected" as 4_FC {
    }

    object "5_ReLU: ReLU" as 5_ReLU {
    }

    object "6_FC: FullyConnected" as 6_FC {
    }

    object "7_Softmax: Softmax" as 7_Softmax {
    }

    object "End: SoftwareComponent" as end {
    }

    object "0_input: Tensor" as 0_input {
        width = 28
        height = 28
        channels = 1
    }

    object "0_weights: Tensor" as 0_weights {
        width = 5
        height = 5
        channels = 20
    }

    object "0_biases: Tensor" as 0_biases {
        width = 1
        height = 1
        channels = 20
    }

    object "0_output: Tensor" as 0_output {
        width = 24
        height = 24
        channels = 20
    }

    object "1_output: Tensor" as 1_output {
        width = 12
        height = 12
        channels = 20
    }
    object "2_weights: Tensor" as 2_weights {
        width = 5
        height = 5
        channels = 50
    }
    object "2_biases: Tensor" as 2_biases {
        width = 1
        height = 1
        channels = 50
    }

    object "2_output: Tensor" as 2_output {
        width = 8
        height = 8
        channels = 50
    }

    object "3_output: Tensor" as 3_output {
        width = 4
        height = 4
        channels = 50
    }
    object "4_weights: Tensor" as 4_weights {
        height = 500
        width = 800
        channels = 1
    }
    object "4_biases: Tensor" as 4_biases {
        width = 1
        height = 1
        channels = 500
    }

    object "4_output: Tensor" as 4_output {
        width = 500
        height = 1
        channels = 1
    }

    object "5_output: Tensor" as 5_output {
        width = 500
        height = 1
        channels = 1
    }
    object "6_weights: Tensor" as 6_weights {
        height = 10
        width = 500
        channels = 1
    }
    object "6_biases: Tensor" as 6_biases {
        width = 1
        height = 1
        channels = 10
    }

    object "6_output: Tensor" as 6_output {
        width = 10
        height = 1
        channels = 1
    }

    object "7_output: Tensor" as 7_output {
        width = 10
        height = 1
        channels = 1
    }
}

@enduml
